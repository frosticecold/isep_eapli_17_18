 ____________

 DESIGN
 ______________


* Utilizar a estrutura base standard da aplicação baseada em camadas

	Classes do dominio : POS, DeliveryMealSession, Booking
	Controlador : RegisterMealMealDeliveryController
	UserInterface : RegisterMealDeliveryUI
	Lista : DeliveryRegistry (DeliveryMealSeesion)
	Repositorios : BookingsRepository
	PersistenceContext : RepositoryFactory

- Sequence Diagram


title SD Register Meal Delivery

":MainMenuUI" -> ":RegisterMealDeliveryUI" : create(pos)
":RegisterMealDeliveryUI"-> ":RegisterMealDeliveryController" : create(pos)
":MainMenuUI" -> ":RegisterMealDeliveryUI" : registerNewMealDelivery(idUser, idBooking)
":RegisterMealDeliveryUI" -> ":RegisterMealDeliveryController" : registerNewMealDelivery(idUser, idBooking)
":RegisterMealDeliveryController" -> ":POS" : deliveryMealSession = getDeliveryMealSession(pos)
":RegisterMealDeliveryController" -> ":DeliveryMealSession" : recordNewMealDelivery(idUser, idBooking)
":DeliveryMealSession" -> ":DeliveryRegistry" : addNewDelivery(idUser, idBooking)
":RegisterMealDeliveryController" -> ":PersistenceContext" : repositories()
":PersistenceContext" -> "RepositoryFactory" : bookingsRepo = getBookingsRepository()
":RegisterMealDeliveryController" -> ":BookingsRepository" : changeState(idBooking, bookingsRepo)
":BookingsRepository" -> ":Booking" : changeState()