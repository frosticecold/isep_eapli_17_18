 ____________

 DESIGN
 ______________


* Utilizar a estrutura base standard da aplicação baseada em camadas

	Classes do dominio : POS, DeliveryMealSession, Booking, CafeteriaUser
	Controlador : RegisterMealMealDeliveryController
	UserInterface : RegisterMealDeliveryUI
	Lista : DeliveryRegistry
	Repositorios : BookingsRepository, CafeteriaUserRepositor, DeliveryMealSessionRepository
	PersistenceContext : RepositoryFactory

- Sequence Diagram


title SD Register Meal Delivery

":MainMenuUI" -> ":RegisterMealDeliveryUI" : create()
":RegisterMealDeliveryUI"-> ":RegisterMealDeliveryController" : create()
":RegisterMealDeliveryUI" -> ":RegisterMealDeliveryController" : validateClient(mNumber)
":RegisterMealDeliveryController" -> ":PersistenceContext" : repositories()
":PersistenceContext" -> ":RepositoryFactory" : cafeteriaUsers()
":RegisterMealDeliveryController" -> ":CafeteriaUsersRepository" : findUserByNumber(mNumber)
":RegisterMealDeliveryController" -> ":PersistenceContext" : repositories()
":PersistenceContext" -> ":RepositoryFactory" : bookings()
":RegisterMealDeliveryController" -> ":BookingsRepository" : findBookingByUser(mNumber)
":RegisterMealDeliveryController" -> ":PersitenceContext" : repositories()
":PersistenceContext" -> ":RepositoryFactory" : deliveryMealSession()
":RegisterMealDeliveryController" -> ":DeliveryMealSessionRepository" : findSession()
":RegisterMealDeliveryController" -> ":DeliveryMealSession" : registerNewDelivery(user, booking)
":RegisterMealDeliveryController" -> "Booking" : changeState()